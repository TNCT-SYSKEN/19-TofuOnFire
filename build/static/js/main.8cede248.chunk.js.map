{"version":3,"sources":["reducers/ListReducer.js","utils/actionTypes.js","reducers/index.js","actions/index.js","components/ListItem.js","containers/PostList.js","containers/Home.js","components/WrapContents.js","App.js","index.js"],"names":["initialState","isFetching","items","ListReducer","state","action","type","error","reducer","combineReducers","getListRequest","getListSuccess","json","getListFailure","getList","dispatch","axios","get","then","response","data","catch","getPresenRequest","postid","getPresenSuccess","getPresenFailure","getPresen","withStyles","card","width","marginTop","marginBottom","media","height","paddingTop","title","fontsize","empty","margin","padding","props","classes","image_url","Card","className","CardContent","CardActions","CardMedia","image","Typography","PostList","this","postItems","renderCards","postCards","emptyCards","postItemsLength","length","index","push","key","CircularProgress","size","React","Component","connect","ownProps","AnimeListReducer","actions","bindActionCreators","theme","root","display","flexWrap","justifyContent","withTheme","Home","Button","button","onClick","WrapContents","WrappedComponent","HOC","App","exact","path","component","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8cede248.chunk.js","sourcesContent":["import * as actionTypes from \"../utils/actionTypes\";\n\nconst initialState = {\n    isFetching: false,\n    items: [],\n};\n\nconst ListReducer = (state = initialState, action) => {\n    switch(action.type) {\n        case actionTypes.GET_LIST_REQUEST:\n            return {\n                ...state,\n                isFetching: true,\n                items: [],\n            };\n        case actionTypes.GET_LIST_SUCCESS:\n            return {\n                ...state,\n                isFetching: false,\n                items: action.items,\n            };\n        case actionTypes.GET_LIST_FAILURE:\n            return {\n                ...state,\n                isFetching: false,\n                error: action.error,\n            };\n        default:\n            return state;\n    }\n};\n\nexport default ListReducer;\n","// 非同期で取得\nexport const GET_LIST_REQUEST = \"GET_LIST_REQUEST\";\nexport const GET_LIST_SUCCESS = \"GET_LIST_SUCCESS\";\nexport const GET_LIST_FAILURE = \"GET_LIST_FAILURE\";\nexport const POST_PRESEN_REQUEST = \"POST_PRESEN_REQUEST\";\nexport const POST_PRESEN_SUCCESS = \"POST_PRESEN_SUCCESS\";\nexport const POST_PRESEN_FAILURE = \"POST_PRESEN_FAILURE\";\nexport const GET_PRESEN_REQUEST = \"GET_PRESEN_REQUEST\";\nexport const GET_PRESEN_SUCCESS = \"GET_PRESEN_SUCCESS\";\nexport const GET_PRESEN_FAILURE = \"GET_PRESEN_FAILURE\";\n\n","import { combineReducers } from \"redux\";\nimport ListReducer from \"./ListReducer\";\n\nconst reducer = combineReducers({\n    ListReducer: ListReducer,\n});\n\nexport default reducer;","import * as actionTypes from \"../utils/actionTypes.js\";\nimport axios from \"axios\";\n\nexport const getListRequest = () => ({\n    type: actionTypes.GET_LIST_REQUEST,\n    items: [],\n});\n\nexport const getListSuccess = (json) => ({\n    type: actionTypes.GET_LIST_SUCCESS,\n    items: json,\n});\n\nexport const getListFailure = (error) => ({\n    type: actionTypes.GET_LIST_FAILURE,\n    error: error,\n});\n\nexport const getList = () => {\n    return (dispatch) => {\n        dispatch(getListRequest());\n        return axios.get('http://locahost:3000/posts/')\n            .then(response => dispatch(getListSuccess(response.data)))\n            .catch(error => dispatch(getListFailure(error)))\n    };\n};\n\nexport const getPresenRequest = (postid) => ({\n    type: actionTypes.GET_PRESEN_REQUEST,\n    postid: postid,\n});\n\nexport const getPresenSuccess = (json) => ({    \n    type: actionTypes.GET_PRESEN_SUCCESS,\n    items: json,\n});\n\nexport const getPresenFailure = (error) => ({\n    type: actionTypes.GET_PRESEN_FAILURE,\n    error: error,\n});\n\nexport const getPresen = (postid) => {\n    return (dispatch) => {\n        dispatch(getPresenRequest(postid));\n        return axios.get(\"http://localhost:3000/posts/\" + postid)\n            .then(response => dispatch(getPresenSuccess(response.data)))\n            .catch(error => dispatch(getListFailure(error)))\n    };\n};\n// export const postPresenRequest = (json) => ({\n//     type: actionTypes.POST_PRESEN_REQUEST,\n//     items: json,\n// });\n\n// export const postPresenSuccess = () => ({\n//     type: actionTypes.POST_PRESEN_SUCCESS,\n// });\n\n// export const postPresenFailure = (error) => ({\n//     type: actionTypes.POST_PRESEN_FAILURE,\n//     error: error,\n// });\n\n// export const postPresen = () => {\n//     return (dispatch) => {\n//         dispatch(postPresenRequest);\n//         return axios.post(\"\")\n//     };\n// }; \n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Typography from '@material-ui/core/Typography';\nimport { CardContent } from \"@material-ui/core\";\n\nconst styles = {\n    card: {\n        width: 330,\n        marginTop: 10,\n        marginBottom: 10,\n    },\n    media: {\n        height: 0,\n        paddingTop: '56.25%', // 16:9\n    },\n    title: {\n        fontsize: 12,\n    },\n    empty: {\n        width: 330,\n        height: 0,\n        margin: 0,\n        padding: 0,\n    },\n}\n\nfunction ListItem(props) {\n    const { empty, title, image_url, classes} = props;\n    if (empty === \"true\") {\n        return (\n            <Card className={classes.empty}>\n            </Card>\n        );\n    } else {\n        return (\n            <Card className={classes.card}>\n                <CardContent>\n                    <CardActions>\n                        <CardMedia\n                            className={classes.media}\n                            image=\"image_url\"\n                            title={title}\n                        />\n                        <Typography className={classes.title}>\n                            {title}\n                        </Typography>\n                    </CardActions>\n                </CardContent>\n            </Card>\n        );\n    }\n}\n\nListItem.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(ListItem);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport * as actions from \"../actions\";\nimport ListItem from \"../components/ListItem\";\nimport { withStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst styles = theme => ({\n    root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'space-around',\n    },\n});\n\nclass PostList extends React.Component {\n    render() {\n        const { ListReducer } = this.props;\n\n        const postItems = ListReducer.items;\n        let renderCards = [];\n        let postCards =[];\n        let emptyCards =[];\n        const postItemsLength = postItems.length;\n\n        for (let index = 0; index < postItemsLength; index++) {\n            postCards.push(<ListItem key={index} {...postItems[index]}/>);\n            emptyCards.push(<ListItem key={postItemsLength + index} empty=\"true\"/>);\n        }\n        renderCards.push(postCards);\n        renderCards.push(emptyCards);\n\n            // 読み込み中はロード画面にする\n        if (ListReducer.isFetching === true){\n            return (\n                <div>\n                    <CircularProgress size={50} />\n                </div>\n            );\n\n        // カードを表示\n        }\n        else {\n            return (\n                <div>\n                    {renderCards}\n                </div>\n            );\n        }\n    }\n}\n\n// Material-ui関連\nPostList.propTypes = {\n    classes: PropTypes.object.isRequired,\n    theme: PropTypes.object.isRequired,\n};\n\n  // Redux関連\nconst mapState = (state, ownProps) => ({\n    AnimeListReducer: state.AnimeListReducer,\n});\nfunction mapDispatch(dispatch) {\n    return {\n        actions: bindActionCreators(actions, dispatch),\n    };\n}\n\n// Material-uiのテーマ設定＋Redux設定\nexport default connect(mapState, mapDispatch)(\n    withStyles(styles, { withTheme: true })(PostList)\n);","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\n\n// Redux関連\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport * as actions from '../actions';\n\n// PostList取得\nimport PostList from '../containers/PostList';\n\nconst styles = theme => ({});\n\nclass Home extends React.Component {\n    render(){\n        const { actions } = this.props;\n        const { classes } = this.props;\n        return(\n            <div>\n                <Button\n                    className={classes.button}\n                    onClick={() => actions.getList()}\n                >\n                    リストを更新\n                </Button>\n                <PostList />\n            </div>\n        );\n    }\n}\n\n// Material-ui関連\nHome.propTypes = {\n    classes: PropTypes.object.isRequired,\n    theme: PropTypes.object.isRequired,\n};\n\n// Redux関連\nconst mapState = (state, ownProps) => ({\n});\nfunction mapDispatch(dispatch) {\n    return {\n        actions: bindActionCreators(actions, dispatch),\n    };\n}\n\n// Material-uiのテーマ設定＋Redux設定\nexport default connect(mapState, mapDispatch)(\n    withStyles(styles, { withTheme: true })(Home)\n);","import React from \"react\";\n\nconst WrapContents = (WrappedComponent, options = {}) => {\n    const HOC = class extends React.Component {\n        render() {\n            return (\n                <WrappedComponent />\n            );\n        }\n    };\n\n    return (\n        HOC\n    );\n};\n\nexport default WrapContents;","import React, { Component } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Home from \"./containers/Home\";\nimport PostList from \"./containers/PostList\";\n\n// Component\nimport WrapContents from \"./components/WrapContents\";\n\n// Container\n// 後で書け\n\nconst NotFound = () => {\n    return(\n        <h2>ページが見つかりませんでした…</h2>\n    )\n}\n\nclass App extends Component {\n    render() {\n        return (\n            <div className=\"App\">\n                <Switch>\n                    <Route exact path=\"/\" component={WrapContents(Home)} />\n                </Switch>\n            </div>\n        );\n    }\n}\n\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport thunk from \"redux-thunk\";\nimport reducers from \"./reducers\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport App from \"./App\";\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose; // Chromeのデバック用\n// const composeEnhancers = compose; // 本番用\nconst store = createStore(\n    reducers,\n    composeEnhancers(\n    applyMiddleware(thunk),\n    )\n);\n\nReactDOM.render(\n    <Provider store = {store}>\n        <Router>\n            <App/>\n        </Router>\n    </Provider>\n    , document.getElementById(\"root\")\n);"],"sourceRoot":""}